{"ast":null,"code":"import { updateNavigatorState, updateTrackerState } from './go_back/GoBack';\nimport { selectNavigatorState } from './select/Select';\nimport { connectDisplayState } from './connect/Connect';\nexport var goBack = function goBack(location, state, default_state) {\n  console.log('modules -> UpdateState.goBack(): STARTED');\n  if (location[1] === 'Navigator') {\n    console.log('Navigator');\n    state = updateNavigatorState(state, default_state);\n  } else if (location[0] == 'Tracker') {\n    console.log('Tracker');\n    state = updateTrackerState(state, default_state);\n  }\n  console.log('modules -> UpdateState.goBack(): FINISHED');\n  return state;\n};\nexport var select = function select(request, state, default_state) {\n  console.log('modules -> UpdateState.select(): STARTED');\n  if (request.location[1] === 'Navigator') {\n    console.log('request.location[1] === Navigator');\n    state = selectNavigatorState(request, state, default_state);\n  }\n  console.log('modules -> UpdateState.select(): FINISHED');\n  return state;\n};\nexport var connect = function connect(request, state, default_state) {\n  console.log('modules -> UpdateState.connect(): STARTED');\n  if (request.location[1] === 'Display') {\n    console.log('request.location[i] === Display');\n    state = connectDisplayState(request, state, default_state);\n  }\n  console.log('modules -> UpdateState.connect(): FINISHED');\n  return state;\n};\nexport var updateCurrent = function updateCurrent(request, state, default_state) {\n  console.log('modules -> UpdateState.updateCurrent(): STARTED');\n  console.log(request);\n  state.display.current.time = request.data.last_row[0];\n  state.display.current.price = request.data.last_row[1];\n  state.display.current.change_price = request.data.last_row[2];\n  state.display.current.rsi = request.data.last_row[3];\n  state.display.current.coin_allocation = request.data.last_row[4];\n  state.display.current.cash_allocation = request.data.last_row[5];\n  state.display.current.coin_balance = request.data.last_row[6];\n  state.display.current.cash_balance = request.data.last_row[7];\n  state.display.current.total_balance = request.data.last_row[8];\n  state.display.current.profit = request.data.last_row[9];\n  state.display.current.total_profit = request.data.last_row[10];\n  state.display.current_array = request.data.last_row;\n  state.display.current_column_names = request.data.column_names;\n  console.log('modules -> UpdateState.updateCurrent(): FINISHED');\n  return state;\n};\nexport var updateGraph = function updateGraph(request, state, default_state) {\n  console.log('modules -> UpdateState.updateGraph(): STARTED');\n  state.display.graph.column_names = request.data.column_names;\n  state.display.graph.last_few_rows = request.data.last_few_rows;\n  console.log('modules -> UpdateState.updateGraph(): FINISHED');\n  return state;\n};","map":{"version":3,"names":["updateNavigatorState","updateTrackerState","selectNavigatorState","connectDisplayState","goBack","location","state","default_state","console","log","select","request","connect","updateCurrent","display","current","time","data","last_row","price","change_price","rsi","coin_allocation","cash_allocation","coin_balance","cash_balance","total_balance","profit","total_profit","current_array","current_column_names","column_names","updateGraph","graph","last_few_rows"],"sources":["/home/adam/Desktop/server/frontend/src/modules/update_state/UpdateState.js"],"sourcesContent":["\nimport {updateNavigatorState, updateTrackerState} from './go_back/GoBack'\nimport { selectNavigatorState } from './select/Select'\nimport { connectDisplayState } from './connect/Connect'\n\n\nexport const goBack = (location, state, default_state) => {\n    console.log('modules -> UpdateState.goBack(): STARTED')\n\n    if (location[1] === 'Navigator'){\n        console.log('Navigator')\n        state = updateNavigatorState(state, default_state)\n    }else if (location[0] == 'Tracker'){\n        console.log('Tracker')\n        state = updateTrackerState(state, default_state)\n    }\n\n    console.log('modules -> UpdateState.goBack(): FINISHED')\n    return state\n}\n\n\nexport const select = (request, state, default_state) => {\n    console.log('modules -> UpdateState.select(): STARTED')\n\n    if (request.location[1] === 'Navigator') {\n        console.log('request.location[1] === Navigator')\n        state = selectNavigatorState(request, state, default_state)\n    }\n\n    console.log('modules -> UpdateState.select(): FINISHED')\n    return state\n}\n\nexport const connect = (request, state, default_state) => {\n    console.log('modules -> UpdateState.connect(): STARTED')\n\n    if (request.location[1] === 'Display') {\n        console.log('request.location[i] === Display')\n        state = connectDisplayState(request, state, default_state)\n    }\n\n    console.log('modules -> UpdateState.connect(): FINISHED')\n    return state\n}\n\n\nexport const updateCurrent = (request, state, default_state) => {\n    console.log('modules -> UpdateState.updateCurrent(): STARTED')\n    console.log(request)\n    state.display.current.time = request.data.last_row[0]\n    state.display.current.price = request.data.last_row[1]\n    state.display.current.change_price = request.data.last_row[2]\n    state.display.current.rsi = request.data.last_row[3]\n    state.display.current.coin_allocation = request.data.last_row[4]\n    state.display.current.cash_allocation = request.data.last_row[5]\n    state.display.current.coin_balance = request.data.last_row[6]\n    state.display.current.cash_balance = request.data.last_row[7]\n    state.display.current.total_balance = request.data.last_row[8]\n    state.display.current.profit = request.data.last_row[9]\n    state.display.current.total_profit = request.data.last_row[10]\n    state.display.current_array = request.data.last_row\n    state.display.current_column_names = request.data.column_names\n    console.log('modules -> UpdateState.updateCurrent(): FINISHED')\n    return state\n}\n\nexport const updateGraph = (request, state, default_state) => {\n    console.log('modules -> UpdateState.updateGraph(): STARTED')\n\n    state.display.graph.column_names = request.data.column_names\n    state.display.graph.last_few_rows = request.data.last_few_rows\n\n\n    console.log('modules -> UpdateState.updateGraph(): FINISHED')\n\n    return state\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}