{"ast":null,"code":"import { updateNavigatorState, updateTrackerState } from './go_back/GoBack';\nimport { selectNavigatorState } from './select/Select';\nimport { connectDisplayState } from './connect/Connect';\nexport const goBack = (location, state, default_state) => {\n  console.log('modules -> UpdateState.goBack(): STARTED');\n  if (location[1] === 'Navigator') {\n    console.log('Navigator');\n    state = updateNavigatorState(state, default_state);\n  } else if (location[0] == 'Tracker') {\n    console.log('Tracker');\n    state = updateTrackerState(state, default_state);\n  }\n  console.log('modules -> UpdateState.goBack(): FINISHED');\n  return state;\n};\nexport const select = (request, state, default_state) => {\n  console.log('modules -> UpdateState.select(): STARTED');\n  if (request.location[1] === 'Navigator') {\n    console.log('request.location[1] === Navigator');\n    state = selectNavigatorState(request, state, default_state);\n  }\n  console.log('modules -> UpdateState.select(): FINISHED');\n  return state;\n};\nexport const connect = (request, state, default_state) => {\n  console.log('modules -> UpdateState.connect(): STARTED');\n  if (request.location[1] === 'Display') {\n    console.log('request.location[i] === Display');\n    state = connectDisplayState(request, state, default_state);\n  }\n  console.log('modules -> UpdateState.connect(): FINISHED');\n  return state;\n};\nexport const updateCurrent = (request, state, default_state) => {\n  console.log('modules -> UpdateState.updateCurrent(): STARTED');\n  console.log(request);\n  state.display.current.time = request.data.last_row[0];\n  state.display.current.price = request.data.last_row[1];\n  console.log('modules -> UpdateState.updateCurrent(): FINISHED');\n  return state;\n};","map":{"version":3,"names":["updateNavigatorState","updateTrackerState","selectNavigatorState","connectDisplayState","goBack","location","state","default_state","console","log","select","request","connect","updateCurrent","display","current","time","data","last_row","price"],"sources":["/media/george/DATA/Project/trading bot/2022-11-8/frontend/src/modules/update_state/UpdateState.js"],"sourcesContent":["\nimport {updateNavigatorState, updateTrackerState} from './go_back/GoBack'\nimport { selectNavigatorState } from './select/Select'\nimport { connectDisplayState } from './connect/Connect'\n\n\nexport const goBack = (location, state, default_state) => {\n    console.log('modules -> UpdateState.goBack(): STARTED')\n\n    if (location[1] === 'Navigator'){\n        console.log('Navigator')\n        state = updateNavigatorState(state, default_state)\n    }else if (location[0] == 'Tracker'){\n        console.log('Tracker')\n        state = updateTrackerState(state, default_state)\n    }\n\n    console.log('modules -> UpdateState.goBack(): FINISHED')\n    return state\n}\n\n\nexport const select = (request, state, default_state) => {\n    console.log('modules -> UpdateState.select(): STARTED')\n\n    if (request.location[1] === 'Navigator') {\n        console.log('request.location[1] === Navigator')\n        state = selectNavigatorState(request, state, default_state)\n    }\n\n    console.log('modules -> UpdateState.select(): FINISHED')\n    return state\n}\n\nexport const connect = (request, state, default_state) => {\n    console.log('modules -> UpdateState.connect(): STARTED')\n\n    if (request.location[1] === 'Display') {\n        console.log('request.location[i] === Display')\n        state = connectDisplayState(request, state, default_state)\n    }\n\n    console.log('modules -> UpdateState.connect(): FINISHED')\n    return state\n}\n\n\nexport const updateCurrent = (request, state, default_state) => {\n    console.log('modules -> UpdateState.updateCurrent(): STARTED')\n\n    console.log(request)\n\n    state.display.current.time = request.data.last_row[0]\n    state.display.current.price = request.data.last_row[1]\n\n    console.log('modules -> UpdateState.updateCurrent(): FINISHED')\n    return state\n}\n"],"mappings":"AACA,SAAQA,oBAAoB,EAAEC,kBAAkB,QAAO,kBAAkB;AACzE,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,SAASC,mBAAmB,QAAQ,mBAAmB;AAGvD,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAQ,EAAEC,KAAK,EAAEC,aAAa,KAAK;EACtDC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;EAEvD,IAAIJ,QAAQ,CAAC,CAAC,CAAC,KAAK,WAAW,EAAC;IAC5BG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBH,KAAK,GAAGN,oBAAoB,CAACM,KAAK,EAAEC,aAAa,CAAC;EACtD,CAAC,MAAK,IAAIF,QAAQ,CAAC,CAAC,CAAC,IAAI,SAAS,EAAC;IAC/BG,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBH,KAAK,GAAGL,kBAAkB,CAACK,KAAK,EAAEC,aAAa,CAAC;EACpD;EAEAC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EACxD,OAAOH,KAAK;AAChB,CAAC;AAGD,OAAO,MAAMI,MAAM,GAAG,CAACC,OAAO,EAAEL,KAAK,EAAEC,aAAa,KAAK;EACrDC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;EAEvD,IAAIE,OAAO,CAACN,QAAQ,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;IACrCG,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChDH,KAAK,GAAGJ,oBAAoB,CAACS,OAAO,EAAEL,KAAK,EAAEC,aAAa,CAAC;EAC/D;EAEAC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EACxD,OAAOH,KAAK;AAChB,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG,CAACD,OAAO,EAAEL,KAAK,EAAEC,aAAa,KAAK;EACtDC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EAExD,IAAIE,OAAO,CAACN,QAAQ,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;IACnCG,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9CH,KAAK,GAAGH,mBAAmB,CAACQ,OAAO,EAAEL,KAAK,EAAEC,aAAa,CAAC;EAC9D;EAEAC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;EACzD,OAAOH,KAAK;AAChB,CAAC;AAGD,OAAO,MAAMO,aAAa,GAAG,CAACF,OAAO,EAAEL,KAAK,EAAEC,aAAa,KAAK;EAC5DC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;EAE9DD,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;EAEpBL,KAAK,CAACQ,OAAO,CAACC,OAAO,CAACC,IAAI,GAAGL,OAAO,CAACM,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EACrDZ,KAAK,CAACQ,OAAO,CAACC,OAAO,CAACI,KAAK,GAAGR,OAAO,CAACM,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EAEtDV,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EAC/D,OAAOH,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module"}